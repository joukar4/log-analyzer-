alertmanager:
  clock:
    time_chunk: 2
  rules:
  - key: hits
    message_on_problem: High traffic generated an alert - hits = {value}/s, triggered
      at {time}
    message_on_recover: High traffic recovered at {time}
    name: high_traffic
    period: 5
    recover_min_time: 10
    severity: 5
    threshold: 10
config:
  file: null
consumer:
  date_format: '%m/%d/%Y, %H:%M:%S'
  refresh_duration: 10
  severity_color:
    unknown: red
    5: red
    4: yellow
    3: yellow
    2: white
    1: white
  table_fields:
  - section
  - hits
  - bandwidth
  - success
  - bad_request
  - error
  - GET
  - POST
  - PUT
  - DELETE
debug: 0
logging:
  disable_existing_loggers: false
  formatters:
    simple:
      format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  handlers:
    file:
      backupCount: 5
      class: logging.handlers.RotatingFileHandler
      filename: /tmp/log-analyzer.log
      formatter: simple
      level: DEBUG
      maxBytes: 10485760
  root:
    handlers:
    - file
    level: DEBUG
  version: 1
parser:
  active: true
  chunk: 1000
  clock:
    algorithm: static
    limit: 30
    time_chunk: 1
  input: /var/log/access.log
persistence:
  class:
    name: MemoryPersistence
    package: log_analyzer.persistence.memory
  data_slice_duration: 2
